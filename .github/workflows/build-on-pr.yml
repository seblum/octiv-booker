name: Deployment CI

env:
  TEST_TAG: octivbooker:test


on:
  # push:
    # branches: master
    # tags: v[12].[0-9]+.[0-9]+
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test-and-lint:
    name: Test & Lint
    runs-on: ubuntu-latest
    outputs:
      PACKAGE_VERSION: ${{ steps.extract_version.outputs.PACKAGE_VERSION }}
    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v4
      - 
        name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - 
        name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - 
        name: Install dependencies
        run: |
          poetry install
      - 
        name: Run linting with ruff
        run: |
          poetry run ruff . --fix
      # - 
      #   name: Run tests
      #   run: |
      #     poetry run pytest
      -  
        name: Extract version from pyproject.toml
        id: extract_version
        run: |
          VERSION=$(grep -Po '(?<=^version = ")[^"]*' ./pyproject.toml)
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_OUTPUT
      # - 
      #   name: Display version
      #   run: echo "The package version is ${{ env.PACKAGE_VERSION }}"

  docker-test:
    name: "Test Build Docker Image"
    runs-on: ubuntu-latest
    needs: test-and-lint
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - 
        name: Build and export to Docker
        uses: docker/build-push-action@v6
        with:
          file: ./poetry.Dockerfile
          load: true
          tags: ${{ env.TEST_TAG }}
      - 
        name: Test Run
        run: |
          docker run --rm ${{ env.TEST_TAG }}   

  # docker:
  #   name: "Build & Push : ${{ matrix.tags }}"
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       tags: ["latest","${{ needs.test-and-lint.outputs.PACKAGE_VERSION }}"]
  #   needs: test-and-lint
  #   steps:
  #     - 
  #       name: Checkout code
  #       uses: actions/checkout@v4
  #     # - 
  #     #   name: Echo tag
  #     #   run: |
  #     #     echo Tag: ${{ matrix.tags }}
  #     -
  #       name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #     -
  #       name: Login to DockerHub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     # -
  #     #   name: Build and push
  #     #   uses: docker/build-push-action@v6
  #     #   with:
  #     #     file: ./poetry.Dockerfile
  #     #     push: true
  #     #     tags: ${{ env.DOCKERREPO }}:${{ matrix.tags }}
