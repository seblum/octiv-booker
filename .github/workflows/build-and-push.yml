name: Deployment CI/CD

env:
  DOCKERREPO: seblum/octivbooker


on:
  # push:
    # branches: master
    # tags: v[12].[0-9]+.[0-9]+
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test-and-lint:
    name: Test & Lint
    runs-on: ubuntu-latest
    outputs:
      PACKAGE_VERSION: ${{ steps.extract_version.outputs.PACKAGE_VERSION }}
    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v4
      - 
        name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - 
        name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - 
        name: Install dependencies
        run: |
          cd slotBooker
          poetry install
      - 
        name: Run linting with ruff
        run: |
          cd slotBooker
          pwd
          ls
          poetry run ruff slotbooker --fix
      # - 
      #   name: Run tests
      #   run: |
      #     cd slotBooker
      #     poetry run pytest
      -  
        name: Extract version from pyproject.toml
        id: extract_version
        run: |
          VERSION=$(grep -Po '(?<=^version = ")[^"]*' ./slotBooker/pyproject.toml)
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV
      - 
        name: Display version
        run: echo "The package version is ${{ env.PACKAGE_VERSION }}"

  docker:
    name: "Build & Push : ${{ matrix.directory }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tags: ["latest","${{ needs.test-and-lint.outputs.PACKAGE_VERSION }}"]
    needs: test-and-lint
    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # -
      #   name: Build and push
      #   uses: docker/build-push-action@v3
      #   with:
      #     file: ./slotBooker/poetry.Dockerfile
      #     push: true
      #     tags: ${{ env.DOCKERREPO }}:${{ matrix.tags }}
