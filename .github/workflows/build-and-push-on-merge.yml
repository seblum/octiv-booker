name: Deployment CD

env:
  DOCKERREPO: seblum/octivbooker


on:
  workflow_dispatch:
  push:
    branches: master
    paths:
      - src/**
      - poetry.Dockerfile
      - pyproject.toml
      - CHANGELOG.md

jobs:
  get-tag:
    name: Get Tag
    runs-on: ubuntu-latest
    outputs:
      PACKAGE_VERSION: ${{ steps.extract_version.outputs.PACKAGE_VERSION }}
    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v4
      -  
        name: Extract version from pyproject.toml
        id: extract_version
        run: |
          VERSION=$(sed -n 's/^version = "\(.*\)"/\1/p' ./pyproject.toml)
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_OUTPUT

  docker:
    name: "üì¶ Build & Push : ${{ matrix.tags }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tags: ["latest","v${{ needs.get-tag.outputs.PACKAGE_VERSION }}"]
    needs: get-tag
    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: ./poetry.Dockerfile
          push: true
          tags: ${{ env.DOCKERREPO }}:${{ matrix.tags }}

  release:
    name: üöÄ Release
    runs-on: ubuntu-latest
    needs:
      - docker
    permissions:
      contents: write  # to be able to publish a GitHub release
      issues: write  # to be able to comment on released issues
      pull-requests: write  # to be able to comment on released pull requests
    steps:
      - 
        uses: googleapis/release-please-action@v4
        name: Release
        id: release
        with:
          release-type: "python"
      - 
        uses: actions/checkout@v4
      - 
        name: üè∑Ô∏è Tag Major and Minor Versions
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/google-github-actions/release-please-action.git"
          git tag -d v${{ steps.release.outputs.major }} || true
          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git push origin :v${{ steps.release.outputs.major }} || true
          git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"
          git push origin v${{ steps.release.outputs.major }}
          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}
